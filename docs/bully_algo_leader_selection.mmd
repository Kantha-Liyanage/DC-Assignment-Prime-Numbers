sequenceDiagram 
    # At node init, check whether a leader is already in the ssystem.
    Node->>ServiceRegister: getLeader()
    ServiceRegister->>Consul: service?meta=leader:true
    Consul-->>ServiceRegister: [empty]
    ServiceRegister-->> Node: null

    # The leader not found
    Node->>Node: runElection
    Node->>ServiceRegister: getAllNodes()
    ServiceRegister->>Consul: service?meta=node:true
    Consul-->>ServiceRegister: [nodes]
    ServiceRegister-->>Node: [nodes]
    Node->>Node: findHigherNodes
    Node->>otherNode: vote

    # all other nodes are younger than the node
    otherNode-->>Node: "younger than you"
    Node->>Node: setLeader(self)
    loop Unitl DistributedSystem is stable 
        Node->>ServiceRegister: getAllNodes()
        ServiceRegister->>Consul: service?meta=node:true
        Consul-->>ServiceRegister: [nodes]
        ServiceRegister-->>Node: [nodes]
        Node->>Node: assessDistributedSystem(a:2,l:1,p:n)
        loop Assign Role for each node
            Node->>otherNode: role
            otherNode-->>Node: ACK
        end 
    end

    # DistributedSystem is stable
    

    
            